import axios from "axios";
import { InferGetStaticPropsType } from "next";
import { useRouter } from "next/dist/client/router";
import Head from "next/head";
import LoadingSpinner from "../../components/common/LoadingSpinner";
import Details from "../../components/Details";
import Footer from "../../components/Footer";
import Header from "../../components/Header";
import { titleReplacer } from "../../utils/replacers";

const env = process.env.NODE_ENV;
const url =
  env === "development"
    ? "https://remoto-hotfix.vercel.app/api/data"
    : "https://remoto.vercel.app/api/data";

export async function getStaticProps({ params }: ParamType) {
  const ghData = await axios.get(url);

  const data: any = ghData.data;

  //Filter data arr
  const filteredData = data.data.filter(
    (item: DataTypes) => item.id === Number(params.id)
  );

  // 404 if page id is not found within data
  if (filteredData.length === 0) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      data: filteredData[0],
    },
    revalidate: 21600,
  };
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true,
  };
}

const JobDescription = ({
  data,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const router = useRouter();

  const typedData: DataTypes = data || null;

  return (
    <div>
      <Head>
        <title>Vaga {titleReplacer(typedData?.title)} | REMOTO</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="font-code min-h-total max-w-screen-lg m-auto px-4">
        <Header />

        {router.isFallback ? (
          <div>
            <LoadingSpinner />
          </div>
        ) : (
          <Details data={data} />
        )}
      </main>

      <Footer />
    </div>
  );
};

export default JobDescription;
