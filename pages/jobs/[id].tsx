import { InferGetStaticPropsType } from "next";
import Head from "next/head";
import Footer from "../../components/Footer";
import Header from "../../components/Header";

interface DataType {
  body: string;
  html_url: string;
  created_at: string;
  id: number;
  labels: {
    name: string;
  }[];
  title: string;
}
interface ArrType {
  params: {
    id: string;
  };
}
interface ParamType {
  params: {
    id: string;
  };
}

export async function getStaticPaths() {
  const rbrRes = await fetch(
    "https://api.github.com/repos/react-brasil/vagas/issues?state=open&per_page=50"
  );
  const fbrRes = await fetch(
    "https://api.github.com/repos/frontendbr/vagas/issues?state=open&per_page=50"
  );
  const rbr = await rbrRes.json();
  const fbr = await fbrRes.json();

  const arr: ArrType[] = [];

  rbr.forEach((item: DataType) => {
    arr.push({ params: { id: String(item.id) } });
  });
  fbr.forEach((item: DataType) => {
    arr.push({ params: { id: String(item.id) } });
  });

  return {
    paths: [...arr],
    fallback: true, // See the "fallback" section below
  };
}

export async function getStaticProps({ params }: ParamType) {
  try {
    const rbrRes = await fetch(
      "https://api.github.com/repos/react-brasil/vagas/issues?state=open&per_page=50"
    );
    const fbrRes = await fetch(
      "https://api.github.com/repos/frontendbr/vagas/issues?state=open&per_page=50"
    );
    const rbr = await rbrRes.json();
    const fbr = await fbrRes.json();

    const data = [...rbr, ...fbr];

    //Filter data arr
    const filteredData = data.filter((item) => item.id === Number(params.id));

    return {
      props: {
        data: filteredData[0],
      },
    };
  } catch (error) {
    console.log(error);
  }
}

const JobDescription = ({
  data,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const typedData: DataType = data;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="font-mono min-h-total max-w-screen-lg m-auto px-4">
        <Header />

        <h1>{typedData.title}</h1>
      </main>

      <Footer />
    </div>
  );
};

export default JobDescription;
