import axios from "axios";
import { InferGetStaticPropsType } from "next";
import { useRouter } from "next/dist/client/router";
import Head from "next/head";
import LoadingSpinner from "../../components/common/LoadingSpinner";
import Details from "../../components/Details";
import { url } from "../../config";
import { titleFormatter } from "../../utils/formatters";

export async function getStaticProps({ params }: ParamType) {
  const ghData = await axios.get(url);

  const { data } = ghData.data;

  const filteredData = data.filter(
    (item: DataTypes) => item.id === Number(params.id)
  );

  if (filteredData.length === 0) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      data: filteredData[0],
    },
    revalidate: 21600,
  };
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true,
  };
}

const JobDescription = ({
  data,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const router = useRouter();

  const typedData: DataTypes = data || null;

  return (
    <div>
      <Head>
        <title>Vaga {titleFormatter(typedData?.title)} | REMOTO</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {router.isFallback ? (
        <div>
          <LoadingSpinner />
        </div>
      ) : (
        <Details data={data} />
      )}
    </div>
  );
};

export default JobDescription;
